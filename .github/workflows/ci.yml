name: CI

on:
  workflow_dispatch:
  push:
    branches: main
    paths-ignore:
      - "*.md"
  pull_request:
    types:
      - opened
      - edited
      - synchronize
      - ready_for_review
    paths-ignore:
      - "*.md"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  # region independent
  ruff-lint:
    uses: Glatzel/template/.github/workflows/ruff.yml@main

  # Checks for dependencies that are not used in the codebase
  cargo-machete:
    name: Cargo Machete
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Machete
        uses: bnjbvr/cargo-machete@main

  # region cache
  cache-pixi:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4

      - name: restore pixi
        uses: actions/cache/restore@v4
        id: check-cache
        with:
          path: .pixi
          key: pixi-${{ runner.os }}-${{ hashFiles('**/pixi.lock') }}
          lookup-only: true

      - name: Set up pixi
        if: ${{steps.check-cache.outputs.cache-hit!='true'}}
        uses: prefix-dev/setup-pixi@v0.8.1
        with:
          cache: false
          environments: dev

      - name: pixi install
        if: ${{steps.check-cache.outputs.cache-hit!='true'}}
        run: pixi install -e dev

      - name: save pixi
        if: ${{steps.check-cache.outputs.cache-hit!='true'}}
        uses: actions/cache/save@v4
        with:
          path: .pixi
          key: ${{steps.check-cache.outputs.cache-primary-key}}


  # always cache vcpkg, rerun install if event is not pr.
  cache-vcpkg:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4

      - name: restore vcpkg
        id: restore-vcpkg
        uses: actions/cache/restore@v4
        with:
          path: ./vcpkg_deps/vcpkg_installed
          key: vcpkg-${{ runner.os }}-${{ hashFiles('./vcpkg_deps/vcpkg.json') }}
          lookup-only: true

      - name: install vcpkg dependencies
        if: ${{steps.restore-vcpkg.outputs.cache-hit!='true'}}
        run: ./scripts/install-vcpkg-dep.ps1

      - name: save vcpkg
        if: ${{steps.restore-vcpkg.outputs.cache-hit!='true'}}
        uses: actions/cache/save@v4
        with:
          path: ./vcpkg_deps/vcpkg_installed
          key: ${{steps.restore-vcpkg.outputs.cache-primary-key}}

  out-cache:
    needs: [cache-vcpkg,cache-pixi]
    runs-on: ubuntu-latest
    steps:
      - run: echo "out cache."

  # region check
  cargo-clippy:
    needs: out-cache
    runs-on: windows-latest
    env:
      RUSTFLAGS: "-Dwarnings"
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup-ci-win
      - uses: Swatinem/rust-cache@v2

      - name: cargo-clippy
        run: ./scripts/cargo-clippy.ps1

  cargo-test:
    needs: out-cache
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup-ci-win
      - uses: dtolnay/rust-toolchain@nightly
      - uses: Swatinem/rust-cache@v2

      - name: Install nextest
        uses: taiki-e/install-action@nextest

      - name: Install cargo-llvm-cov
        uses: taiki-e/install-action@cargo-llvm-cov

      - name: rust test
        run: ./scripts/test-rs.ps1

      - name: Upload results to Codecov
        if: ${{ !cancelled() }}
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN  }}
          slug: Glatzel/rs-geotool

      - name: Upload test results to Codecov
        if: ${{ !cancelled() }}
        uses: codecov/test-results-action@v1
        with:
          fail_ci_if_error: true
          token: ${{ secrets.CODECOV_TOKEN }}



  py-geotool:
    needs: out-cache
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup-ci-win
      - uses: Swatinem/rust-cache@v2

      - name: dev python
        run: ./scripts/develop.ps1

      - name: test python
        run: ./scripts/test-py.ps1

      - name: Upload results to Codecov
        if: ${{ !cancelled() }}
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: Glatzel/rs-geotool

      - name: Upload test results to Codecov
        if: ${{ !cancelled() }}
        uses: codecov/test-results-action@v1
        with:
          fail_ci_if_error: true
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: build python
        run: ./scripts/build-py.ps1

      - name: upload whl
        uses: actions/upload-artifact@v4
        with:
          name: py-geotool-debug
          path: dist/*.whl
          if-no-files-found: error

  geotool-cli:
    needs: out-cache
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup-ci-win
      - uses: Swatinem/rust-cache@v2

      - name: build cli
        run: ./scripts/build-cli.ps1

      - name: test cli
        run: ./examples/cli.ps1

      - name: upload cli
        uses: actions/upload-artifact@v4
        with:
          name: geotool-cli-debug
          path: dist/*.zip
          if-no-files-found: error

  out-check:
    needs: [cargo-machete,ruff-lint,cargo-clippy,cargo-test,py-geotool,geotool-cli]
    runs-on: ubuntu-latest
    steps:
      - run: echo "out check."
