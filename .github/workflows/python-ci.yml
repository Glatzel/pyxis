name: python-CI

on:
  workflow_dispatch:
  workflow_call:
    inputs:
      build-release:
        type: boolean
        default: false
env:
  PYTHON_ROOT: ./python
jobs:
  ruff-lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - id: changed
        uses: tj-actions/changed-files@v45
        if: ${{github.event_name == 'pull_request'}}
        with:
          files: |
            ${{env.PYTHON_ROOT}}/**
      - name: Set up pixi
        if: ${{ steps.changed.outputs.any_changed != 'false' }}
        uses: prefix-dev/setup-pixi@v0.8.3
        with:
          run-install: false
      - name: lint
        if: ${{ steps.changed.outputs.any_changed != 'false' }}
        run: ${{env.PYTHON_ROOT}}/scripts/ruff.ps1

  sphinx:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - id: changed
        uses: tj-actions/changed-files@v45
        if: ${{github.event_name == 'pull_request'}}
        with:
          files: |
            ${{env.PYTHON_ROOT}}/**
      - name: Set up pixi
        if: ${{ steps.changed.outputs.any_changed != 'false' }}
        uses: prefix-dev/setup-pixi@v0.8.3
        with:
          run-install: false
      - uses: dtolnay/rust-toolchain@stable
        if: ${{ steps.changed.outputs.any_changed != 'false' }}

      - name: sphinx build
        if: ${{ steps.changed.outputs.any_changed != 'false' }}
        run: ${{env.PYTHON_ROOT}}/scripts/sphinx.ps1
        shell: pwsh

      - name: upload doc
        if: ${{ steps.changed.outputs.any_changed != 'false' }}
        uses: actions/upload-artifact@v4
        with:
          name: python-doc
          path: ${{env.PYTHON_ROOT}}/dist/*.7z
          if-no-files-found: error

  rattler-pyxis-py:
    strategy:
      fail-fast: false
      matrix:
        machine: [windows-latest, ubuntu-latest]
        include:
          - machine: windows-latest
            os: win-64
            sub-packages: '["nvcc","cudart"]'
          - machine: ubuntu-latest
            os: linux-64
            sub-packages: '["nvcc"]'
    runs-on: ${{matrix.machine}}
    steps:
      - uses: actions/checkout@v4
      - id: changed
        uses: tj-actions/changed-files@v45
        if: ${{github.event_name == 'pull_request'}}
        with:
          files: |
            ${{env.PYTHON_ROOT}}/**
      - uses: dtolnay/rust-toolchain@stable
        if: ${{ steps.changed.outputs.any_changed != 'false' }}
      - name: Set up pixi
        if: ${{ steps.changed.outputs.any_changed != 'false' }}
        uses: prefix-dev/setup-pixi@v0.8.3
        with:
          run-install: false
      - run: choco install pkgconfiglite
        if: ${{runner.os == 'Windows'&&steps.changed.outputs.any_changed != 'false'}}
      - uses: Jimver/cuda-toolkit@v0.2.22
        if: ${{ steps.changed.outputs.any_changed != 'false' }}
        with:
          cuda: "12.8.0"
          sub-packages: ${{matrix.sub-packages}}
          method: network

      - name: build
        if: ${{ steps.changed.outputs.any_changed != 'false' }}
        run: ${{env.PYTHON_ROOT}}/rattler/ci-pyxis-py.ps1 ${{ inputs.build-release && '-config  release' || null }}
        shell: pwsh

      - name: upload conda
        if: ${{ steps.changed.outputs.any_changed != 'false' }}
        uses: actions/upload-artifact@v4
        with:
          name: rattler-pyxis-py-${{matrix.machine}}
          path: |
            ${{env.PYTHON_ROOT}}/rattler/output/${{matrix.os}}/*.conda
            ${{env.PYTHON_ROOT}}/dist/*.whl
          if-no-files-found: error

      - name: Upload results to Codecov
        uses: codecov/codecov-action@v5
      - name: Upload test results to Codecov
        uses: codecov/test-results-action@v1
        with:
          fail_ci_if_error: true
          token: ${{ secrets.CODECOV_TOKEN }}
  cargo-clippy:
    runs-on: ubuntu-latest
    env:
      RUSTFLAGS: "-Dwarnings"
    steps:
      - uses: actions/checkout@v4
      - id: changed
        uses: tj-actions/changed-files@v45
        if: ${{github.event_name == 'pull_request'}}
        with:
          files: |
            ${{env.PYTHON_ROOT}}/**
      - uses: dtolnay/rust-toolchain@stable
        if: ${{ steps.changed.outputs.any_changed != 'false' }}
      - name: Set up pixi
        if: ${{ steps.changed.outputs.any_changed != 'false' }}
        uses: prefix-dev/setup-pixi@v0.8.3
        with:
          run-install: false
      - name: cargo-clippy
        if: ${{ steps.changed.outputs.any_changed != 'false' }}
        run: |
          ${{env.PYTHON_ROOT}}/scripts/cargo-clippy.ps1
        shell: pwsh

  cargo-fmt:
    runs-on: ubuntu-latest
    env:
      RUSTFLAGS: "-Dwarnings"
    steps:
      - uses: actions/checkout@v4
      - id: changed
        uses: tj-actions/changed-files@v45
        if: ${{github.event_name == 'pull_request'}}
        with:
          files: |
            ${{env.PYTHON_ROOT}}/**
      - uses: dtolnay/rust-toolchain@nightly
        if: ${{ steps.changed.outputs.any_changed != 'false' }}
        with:
          components: rustfmt
      - name: Set up pixi
        if: ${{ steps.changed.outputs.any_changed != 'false' }}
        uses: prefix-dev/setup-pixi@v0.8.3
        with:
          run-install: false
      - name: cargo-fmt
        if: ${{ steps.changed.outputs.any_changed != 'false' }}
        run: |
          ${{env.PYTHON_ROOT}}/scripts/cargo-fmt.ps1
        shell: pwsh
